{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://tasks/./src/database.ts","webpack://tasks/./src/extension.ts","webpack://tasks/external commonjs \"sqlite3\"","webpack://tasks/external commonjs \"vscode\"","webpack://tasks/external node-commonjs \"fs\"","webpack://tasks/external node-commonjs \"path\"","webpack://tasks/webpack/bootstrap","webpack://tasks/webpack/startup"],"sourcesContent":["import sqlite3 from 'sqlite3';\r\n\r\n\r\nexport class LocalDatabase {\r\n  private _DataBase;\r\n  constructor(\r\n    private readonly _DataBaseFile: string,\r\n  ) {\r\n\r\n    this._DataBase = new sqlite3.Database(this._DataBaseFile);\r\n  }\r\n\r\n  public CreateDBStruct() {\r\n    // Create a table\r\n\r\n    this._DataBase.serialize(() => {\r\n      this._DataBase.run(`CREATE TABLE Tarea (\r\n\t\t\tID         INTEGER     PRIMARY KEY \r\n\t\t\t\t\t\t\t\t   NOT NULL,\r\n\t\t\tTexto      TEXT        NOT NULL,\r\n\t\t\tFecha      NUMERIC     NOT NULL,\r\n\t\t\tCompletada INTEGER (2) NOT NULL\r\n\t\t);`);\r\n\r\n      this._DataBase.run(`CREATE TABLE Estado (\r\n        Tarea              REFERENCES Tarea (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,\r\n        Fecha              NUMERIC NOT NULL,\r\n        Estado             INTEGER NOT NULL,\r\n        PRIMARY KEY (Tarea, Fecha)\r\n    );`);\r\n\r\n      this._DataBase.run(`CREATE TRIGGER actualizar_completada\r\n    AFTER INSERT ON Estado\r\n    BEGIN\r\n        UPDATE Tarea\r\n        SET Completada = NEW.Estado\r\n        WHERE ID = NEW.Tarea;\r\n    END;`)\r\n    });\r\n  }\r\n\r\n  private async _GetNextIdInter() {\r\n    return new Promise((resolve, reject) => {\r\n      this._DataBase.get(\"select id from Tarea ORDER BY id DESC limit 1\", (err, row) => {\r\n        if (err) reject(err);\r\n        if (!row) {\r\n          resolve(undefined);\r\n        }else{\r\n          resolve(row);\r\n\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  public async _GetNextId() {\r\n    let Res = await this._GetNextIdInter()\r\n    if (Res !== undefined && Res !== null && !(typeof Res === 'object' && Res.constructor === Object)) {\r\n      return (Res as { ID: number }).ID + 1;\r\n  }\r\n    return 1;\r\n    \r\n\r\n  }\r\n\r\n  public async _CrearTarea(id: number, Text: string, satus: boolean) {\r\n    this._DataBase.run(`INSERT INTO Tarea (Completada,Fecha,Texto,ID)VALUES (?,?,?,?);`,\r\n      [booleanToTinyInt(satus), getDateUTCPosix(), Text, id])\r\n  }\r\n\r\n  public async _NewEstado(id: number, satus: boolean) {\r\n    console.log(booleanToTinyInt(satus));\r\n    \r\n    this._DataBase.run(`INSERT INTO Estado (Estado,Fecha,Tarea) VALUES (?,?,?);`, \r\n                        [booleanToTinyInt(satus), getDateUTCPosix(), id])\r\n  }\r\n\r\n  public async _UpdateText(id:number, Text:string){\r\n    this._DataBase.run(`UPDATE Tarea\r\n    SET Texto = ?       \r\n  WHERE ID = ?;`,[Text, id])\r\n  }\r\n\r\n  private async GetAllTaskInter() {\r\n    return new Promise((resolve, reject) => {\r\n      this._DataBase.all(\"SELECT t.id, t.Texto, COALESCE(e.Fecha, t.Fecha) AS Fecha,COALESCE(e.estado, 0) AS completado FROM tarea t LEFT JOIN (SELECT tarea, estado, fecha FROM estado e1 WHERE fecha = (SELECT MAX(fecha) FROM estado e2 WHERE e1.tarea = e2.tarea)) e ON t.id = e.tarea;\", (err, row) => {\r\n        if (err) reject(err); // I assume this is how an error is thrown with your db callback\r\n        resolve(row);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  public async _GetAllTask() {\r\n    let Res = await this.GetAllTaskInter()\r\n    if (Res == undefined) {\r\n      return [];\r\n\r\n    } else\r\n      return Res\r\n      \r\n\r\n  }\r\n\r\n  public async _deleteTask(id:number){\r\n    this._DataBase.run(`DELETE FROM Tarea WHERE ID = ?`,[id])\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nfunction getDateUTCPosix() {\r\n  return new Date().toISOString();\r\n}\r\n\r\nfunction booleanToTinyInt(value: boolean) {\r\n  if (value) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}","import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as Database from './database'\n\n\nexport async function activate(context: vscode.ExtensionContext) {\n\tconst provider = new TasksViewProvider(context.extensionUri);\n\tcontext.subscriptions.push(vscode.commands.registerCommand('StartTaskDB', async () => {\n\t\tlet [DBPath, newFile] = CreateDBFile(vscode.workspace);\n\t\tif (DBPath != \"\") {\n\t\t\tconst _DB = new Database.LocalDatabase(DBPath);\n\t\t\tif (newFile) {\n\t\t\t\t_DB.CreateDBStruct()\n\t\t\t}\n\t\t\tlet Tareas = await _DB._GetAllTask()\n\t\t\tlet view = provider.getView()\n\t\t\tif (view !== undefined) {\n\t\t\t\tview.webview.postMessage({ type: 'GetAll', Tareas: Tareas });\n\t\t\t\tlet id = await _DB._GetNextId();\n\t\t\t\tview.webview.postMessage({ type: 'GetNextID', ID: id });\n\t\t\t}\n\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('AddTaskToDB', async (id: number, Text: string, estado: boolean) => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tawait _DB._CrearTarea(id, Text, estado);\n\t\tlet Nid = await _DB._GetNextId();\n\t\tlet view = provider.getView()\n\t\tif (view !== undefined) {\n\t\t\tview.webview.postMessage({ type: 'GetNextID', ID: Nid });\n\t\t}\n\t}));\n\tcontext.subscriptions.push(vscode.commands.registerCommand('UpdateTextTaskToDB', async (id: number, Text: string) => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tawait _DB._UpdateText(id, Text)\n\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('UpdateStatusTaskToDB', async (id: number, estado: boolean) => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tawait _DB._NewEstado(id, estado)\n\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('DeleteTaskToDB', async (id: number) => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tawait _DB._deleteTask(id)\n\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('GetNextIDTaskOfDB', async () => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tlet id = await _DB._GetNextId();\n\t\tlet view = provider.getView()\n\t\tif (view !== undefined) {\n\t\t\tview.webview.postMessage({ type: 'GetNextID', ID: id });\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('GetAllTasksOfDB', async () => {\n\t\tconst _DB = new Database.LocalDatabase(getDBFilePath(vscode.workspace));\n\t\tlet Tareas = await _DB._GetAllTask()\n\t\tlet view = provider.getView()\n\t\tif (view !== undefined) {\n\t\t\tview.webview.postMessage({ type: 'GetAll', Tareas: Tareas });\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(\n\t\tvscode.window.registerWebviewViewProvider(TasksViewProvider.viewType, provider));\n\n\n}\n\nclass TasksViewProvider implements vscode.WebviewViewProvider {\n\n\tpublic static readonly viewType = 'MyTasksView';\n\n\tprivate _view?: vscode.WebviewView;\n\n\n\tconstructor(\n\t\tprivate readonly _extensionUri: vscode.Uri,\n\t) { }\n\n\tpublic resolveWebviewView(\n\t\twebviewView: vscode.WebviewView,\n\t\tcontext: vscode.WebviewViewResolveContext,\n\t\t_token: vscode.CancellationToken,\n\t) {\n\t\tthis._view = webviewView;\n\n\t\twebviewView.webview.options = {\n\t\t\t// Allow scripts in the webview\n\t\t\tenableScripts: true,\n\n\t\t\tlocalResourceRoots: [\n\t\t\t\tthis._extensionUri\n\t\t\t]\n\t\t};\n\n\n\n\n\t\twebviewView.webview.html = this._getHtmlForWebview(\"sidebar.html\", \"style.css\", \"main.js\");\n\n\n\n\t\twebviewView.webview.onDidReceiveMessage(data => {\n\t\t\tswitch (data.type) {\n\t\t\t\tcase \"StartTaskDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"AddTaskToDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type, data.ID, data.Text, data.Status);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"UpdateTextTaskToDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type, data.ID, data.Text);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"UpdateStatusTaskToDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type, data.ID, data.Status);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DeleteTaskToDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type, data.ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"GetNextIDTaskOfDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type, data.ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"GetAllTasksOfDB\":\n\t\t\t\t\tvscode.commands.executeCommand(data.type);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t});\n\t}\n\n\n\tprivate _getHtmlForWebview(HTMLFileName: string, CSSFileName: string, JSFileName: string) {\n\t\tconst CSSFilePath = vscode.Uri.joinPath(this._extensionUri, 'resources', 'css', CSSFileName);\n\t\tconst htmlFilePath = vscode.Uri.joinPath(this._extensionUri, 'resources', 'templates', HTMLFileName);\n\t\tconst JSFilePath = vscode.Uri.joinPath(this._extensionUri, 'resources', 'js', JSFileName);\n\t\tconst JS_Code = fs.readFileSync(JSFilePath.fsPath, 'utf8');\n\t\tconst HTML_Code = fs.readFileSync(htmlFilePath.fsPath, 'utf8');\n\t\tconst CSS_Code = fs.readFileSync(CSSFilePath.fsPath, 'utf8');\n\t\treturn `\n\t\t<style>${CSS_Code}</style>\n\n\t\t${HTML_Code}\n\n\t\t<script>${JS_Code}</script>\n\t\t`\n\t}\n\n\tpublic getView(): vscode.WebviewView | undefined {\n\t\treturn this._view;\n\t}\n}\n\nfunction getNonce() {\n\tlet text = '';\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < 32; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}\n\nfunction CreateDBFile(Workspace: any): [string, boolean] {\n\tlet newFile = false;\n\tconst workspaceFolders = Workspace.workspaceFolders;\n\tif (!workspaceFolders || workspaceFolders.length === 0) {\n\t\treturn [\"\", false];\n\t}\n\tconst workspaceFolderPath = workspaceFolders[0].uri.fsPath;\n\tconst WorkspaceVscodeFolderPath = path.join(workspaceFolderPath, \".vscode\");\n\tif (!ExistAndFolder(WorkspaceVscodeFolderPath)) {\n\t\tfs.mkdirSync(WorkspaceVscodeFolderPath);\n\t}\n\tconst workspaceDBFilePath = path.join(workspaceFolderPath, \".vscode\", \"Task.sqlite3\");\n\tif (!fs.existsSync(workspaceDBFilePath)) {\n\t\tfs.closeSync(fs.openSync(workspaceDBFilePath, 'w'))\n\t\tnewFile = true;\n\t}\n\treturn [workspaceDBFilePath, newFile];\n}\n\nfunction getDBFilePath(Workspace: any): string {\n\tlet newFile = false;\n\tconst workspaceFolders = Workspace.workspaceFolders;\n\tif (!workspaceFolders || workspaceFolders.length === 0) {\n\t\treturn \"\";\n\t}\n\tconst workspaceFolderPath = workspaceFolders[0].uri.fsPath;\n\treturn path.join(workspaceFolderPath, \".vscode\", \"Task.sqlite3\");\n}\n\nfunction ExistAndFolder(path: string) {\n\ttry {\n\t\treturn fs.lstatSync(path).isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\n\n","module.exports = require(\"sqlite3\");","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["getDateUTCPosix","Date","toISOString","booleanToTinyInt","value","_DataBaseFile","_DataBase","constructor","this","Database","CreateDBStruct","serialize","run","_GetNextIdInter","Promise","resolve","reject","get","err","row","undefined","_GetNextId","Res","Object","ID","_CrearTarea","id","Text","satus","_NewEstado","console","log","_UpdateText","GetAllTaskInter","all","_GetAllTask","_deleteTask","async","context","provider","TasksViewProvider","extensionUri","subscriptions","push","vscode","commands","registerCommand","DBPath","newFile","Workspace","workspaceFolders","length","workspaceFolderPath","uri","fsPath","WorkspaceVscodeFolderPath","path","join","fs","lstatSync","isDirectory","error","ExistAndFolder","mkdirSync","workspaceDBFilePath","existsSync","closeSync","openSync","CreateDBFile","workspace","_DB","LocalDatabase","Tareas","view","getView","webview","postMessage","type","estado","getDBFilePath","Nid","window","registerWebviewViewProvider","viewType","_extensionUri","static","_view","resolveWebviewView","webviewView","_token","options","enableScripts","localResourceRoots","html","_getHtmlForWebview","onDidReceiveMessage","data","executeCommand","Status","HTMLFileName","CSSFileName","JSFileName","CSSFilePath","Uri","joinPath","htmlFilePath","JSFilePath","JS_Code","readFileSync","HTML_Code","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}